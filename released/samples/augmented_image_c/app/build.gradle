apply plugin: 'com.android.application'

// Create a configuration to mark which aars to extract .so files from
configurations { natives }

android {
    signingConfigs {
        config {
            keyAlias 'key0'
            keyPassword '123456'
            storeFile file('key.jks')
            storePassword '123456'
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.standardar.ar.core.examples.c.augmentedimage"

        // 24 is the minimum since ARCore only works with 24 and higher.
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "2.4.0.2"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11", "-Wall", "-Werror=return-type"
                arguments "-DANDROID_STL=c++_static"
                abiFilters "arm64-v8a"
            }
        }
        ndk {
            abiFilters "arm64-v8a"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    sourceSets {
        main {
            // let gradle pack the shared library into apk
            jniLibs.srcDirs = ['../../../sdk/libs']
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    // ARCore library
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation fileTree(dir: '../../../sdk/jar', include: ['*.jar'])
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
}


task makeApk(type: Copy) {
    delete ('../../../sdk/apk//AugImg C.apk')
    from ('build/outputs/apk/release/')
    into ('../../../sdk/apk/')
    include('app-release.apk')
    rename('app-release.apk', 'AugImg C.apk')
}

makeApk.dependsOn("assembleRelease")

